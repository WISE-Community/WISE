{"version":3,"sources":["sessionService.spec.es6"],"names":["describe","beforeEach","angular","mock","module","mainModule","name","SessionService","inject","_SessionService_","it","sessionTimeout","intervals","calculateIntervals","expect","showWarningInterval","toEqual","forceLogoutAfterWarningInterval"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEAA,QAAQ,CAAC,gBAAD,EAAmB,YAAM;AAE/BC,EAAAA,UAAU,CAACC,oBAAQC,IAAR,CAAaC,MAAb,CAAoBC,iBAAWC,IAA/B,CAAD,CAAV;AAEA,MAAIC,cAAJ;AAEAN,EAAAA,UAAU,CAACO,MAAM,CAAC,UAACC,gBAAD,EAAsB;AACtCF,IAAAA,cAAc,GAAGE,gBAAjB;AACD,GAFgB,CAAP,CAAV;AAIAT,EAAAA,QAAQ,CAAC,sBAAD,EAAyB,YAAM;AACrCU,IAAAA,EAAE,CAAC,mFAAD,EAAsF,YAAM;AAC5F,UAAMC,cAAc,GAAG,GAAvB;AACA,UAAMC,SAAS,GAAGL,cAAc,CAACM,kBAAf,CAAkCF,cAAlC,CAAlB;AACAG,MAAAA,MAAM,CAACF,SAAS,CAACG,mBAAX,CAAN,CAAsCC,OAAtC,CAA8C,GAA9C;AACAF,MAAAA,MAAM,CAACF,SAAS,CAACK,+BAAX,CAAN,CAAkDD,OAAlD,CAA0D,EAA1D;AACD,KALC,CAAF;AAOAN,IAAAA,EAAE,CAAC,mFAAD,EAAsF,YAAM;AAC5F,UAAMC,cAAc,GAAG,IAAvB;AACA,UAAMC,SAAS,GAAGL,cAAc,CAACM,kBAAf,CAAkCF,cAAlC,CAAlB;AACAG,MAAAA,MAAM,CAACF,SAAS,CAACG,mBAAX,CAAN,CAAsCC,OAAtC,CAA8C,IAA9C;AACAF,MAAAA,MAAM,CAACF,SAAS,CAACK,+BAAX,CAAN,CAAkDD,OAAlD,CAA0D,GAA1D;AACD,KALC,CAAF;AAOAN,IAAAA,EAAE,CAAC,mFAAD,EAAsF,YAAM;AAC5F,UAAMC,cAAc,GAAG,IAAvB;AACA,UAAMC,SAAS,GAAGL,cAAc,CAACM,kBAAf,CAAkCF,cAAlC,CAAlB;AACAG,MAAAA,MAAM,CAACF,SAAS,CAACG,mBAAX,CAAN,CAAsCC,OAAtC,CAA8C,IAA9C;AACAF,MAAAA,MAAM,CAACF,SAAS,CAACK,+BAAX,CAAN,CAAkDD,OAAlD,CAA0D,GAA1D;AACD,KALC,CAAF;AAMD,GArBO,CAAR;AAsBD,CAhCO,CAAR","sourcesContent":["import angular from 'angular';\nimport mainModule from 'vle/main';\nimport 'angular-mocks';\n\ndescribe('SessionService', () => {\n\n  beforeEach(angular.mock.module(mainModule.name));\n\n  let SessionService;\n\n  beforeEach(inject((_SessionService_) => {\n    SessionService = _SessionService_;\n  }));\n\n  describe('calculateIntervals()', () => {\n    it('should calculate the warn and logout intervals when session timeout is 10 minutes', () => {\n      const sessionTimeout = 600;\n      const intervals = SessionService.calculateIntervals(sessionTimeout);\n      expect(intervals.showWarningInterval).toEqual(540);\n      expect(intervals.forceLogoutAfterWarningInterval).toEqual(60);\n    });\n\n    it('should calculate the warn and logout intervals when session timeout is 30 minutes', () => {\n      const sessionTimeout = 1800;\n      const intervals = SessionService.calculateIntervals(sessionTimeout);\n      expect(intervals.showWarningInterval).toEqual(1620);\n      expect(intervals.forceLogoutAfterWarningInterval).toEqual(180);\n    });\n    \n    it('should calculate the warn and logout intervals when session timeout is 60 minutes', () => {\n      const sessionTimeout = 3600;\n      const intervals = SessionService.calculateIntervals(sessionTimeout);\n      expect(intervals.showWarningInterval).toEqual(3300);\n      expect(intervals.forceLogoutAfterWarningInterval).toEqual(300);\n    });\n  });\n});\n"],"file":"sessionService.spec.js"}