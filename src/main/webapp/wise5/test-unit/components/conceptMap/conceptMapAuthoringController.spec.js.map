{"version":3,"sources":["conceptMapAuthoringController.spec.es6"],"names":["describe","$controller","$rootScope","$scope","conceptMapAuthoringController","component","beforeEach","angular","mock","module","mainModule","name","inject","_$controller_","_$rootScope_","$new","componentContent","JSON","parse","stringify","nodeId","it","authoringViewComponentChangedSpy","spyOn","objects","authoringViewMoveObjectUp","expect","toEqual","authoringViewMoveObjectDown"],"mappings":"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","file":"conceptMapAuthoringController.spec.js","sourcesContent":["import angular from 'angular';\nimport mainModule from 'authoringTool/main';\nimport 'angular-mocks';\n\ndescribe('ConceptMapAuthoringController', () => {\n\n  let $controller;\n  let $rootScope;\n  let $scope;\n  let conceptMapAuthoringController;\n  let component;\n\n  beforeEach(angular.mock.module(mainModule.name));\n\n  beforeEach(inject((_$controller_, _$rootScope_) => {\n    $controller = _$controller_;\n    $rootScope = _$rootScope_;\n\n    component = {\n      'id': 'ut00qpig10',\n      'type': 'ConceptMap',\n      'prompt': '',\n      'showSaveButton': false,\n      'showSubmitButton': false,\n      'width': 800,\n      'height': 600,\n      'background': null,\n      'stretchBackground': null,\n      'nodes': [\n        {\n          'id': 'node1',\n          'label': 'Sun',\n          'fileName': 'sun.png',\n          'width': 100,\n          'height': 100\n        },\n        {\n          'id': 'node2',\n          'label': 'Space',\n          'fileName': 'Space.png',\n          'width': 100,\n          'height': 100\n        },\n        {\n          'id': 'node3',\n          'label': 'Earths Surface',\n          'fileName': 'Earth_surface.png',\n          'width': 100,\n          'height': 100\n        },\n        {\n          'id': 'node4',\n          'label': 'Beneath Surface',\n          'fileName': 'Earth_beneath.png',\n          'width': 100,\n          'height': 100\n        }\n      ],\n      'linksTitle': '',\n      'links': [\n        {\n          'id': 'link1',\n          'label': 'Solar Radiation',\n          'color': '#DDD266'\n        },\n        {\n          'id': 'link2',\n          'label': 'Infrared Radiation',\n          'color': '#B62467'\n        },\n        {\n          'id': 'link3',\n          'label': 'Heat',\n          'color': '#DE2D26'\n        }\n      ],\n      'rules': [],\n      'starterConceptMap': null,\n      'customRuleEvaluator': '',\n      'showAutoScore': false,\n      'showAutoFeedback': false,\n      'showNodeLabels': true,\n      'showAddToNotebookButton': true\n    };\n    $scope = $rootScope.$new();\n    $scope.componentContent = JSON.parse(JSON.stringify(component));\n\n    conceptMapAuthoringController = $controller('ConceptMapAuthoringController', { $scope: $scope });\n    conceptMapAuthoringController.nodeId = 'node1';\n  }));\n\n  it('should move the object up', () => {\n    const authoringViewComponentChangedSpy = spyOn(conceptMapAuthoringController, 'authoringViewComponentChanged');\n    const objects = [1, 2, 3, 4, 5];\n    conceptMapAuthoringController.authoringViewMoveObjectUp(objects, 1);\n    expect(objects[0]).toEqual(2);\n    expect(objects[1]).toEqual(1);\n    expect(objects[2]).toEqual(3);\n    expect(objects[3]).toEqual(4);\n    expect(objects[4]).toEqual(5);\n  });\n\n  it('should move the object down', () => {\n    const authoringViewComponentChangedSpy = spyOn(conceptMapAuthoringController, 'authoringViewComponentChanged');\n    const objects = [1, 2, 3, 4, 5];\n    conceptMapAuthoringController.authoringViewMoveObjectDown(objects, 1);\n    expect(objects[0]).toEqual(1);\n    expect(objects[1]).toEqual(3);\n    expect(objects[2]).toEqual(2);\n    expect(objects[3]).toEqual(4);\n    expect(objects[4]).toEqual(5);\n  });\n\n});\n"]}