{"version":3,"sources":["summaryAuthoringController.spec.es6"],"names":["describe","$controller","$rootScope","$scope","summaryAuthoringController","ProjectService","component","id","type","prompt","showSaveButton","showSubmitButton","summaryNodeId","summaryComponentId","source","studentDataType","chartType","requirementToSeeSummary","highlightCorrectAnswer","showAddToNotebookButton","showPromptFromOtherComponent","loadComponent","$new","componentContent","JSON","parse","stringify","authoringComponentContent","beforeEach","angular","mock","module","mainModule","name","inject","_$controller_","_$rootScope_","_ProjectService_","it","expect","isComponentTypeAllowed","toBeFalsy","toBeTruthy","spyOn","components","toEqual","and","returnValue","authoringSummaryNodeIdChanged","toBe","otherPrompt","otherComponent","updateOtherPrompt","isAvailable","isStudentDataTypeAvailableForComponent","hasCorrectAnswer","componentHasCorrectAnswer","choices","text","isCorrect"],"mappings":"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","sourcesContent":["import angular from 'angular';\nimport mainModule from 'authoringTool/main';\nimport 'angular-mocks';\n\ndescribe('SummaryAuthoringController', () => {\n\n  let $controller;\n  let $rootScope;\n  let $scope;\n  let summaryAuthoringController;\n  let ProjectService;\n  let component = {\n    id: '0ib10ikexr',\n    type: 'Summary',\n    prompt: '',\n    showSaveButton: false,\n    showSubmitButton: false,\n    summaryNodeId: 'node1',\n    summaryComponentId: 'zptq1ndv4h',\n    source: 'period',\n    studentDataType: 'responses',\n    chartType: 'column',\n    requirementToSeeSummary: 'none',\n    highlightCorrectAnswer: true,\n    showAddToNotebookButton: true,\n    showPromptFromOtherComponent: true\n  };\n\n  const loadComponent = () => {\n    $scope = $rootScope.$new();\n    $scope.componentContent = JSON.parse(JSON.stringify(component));\n    $scope.authoringComponentContent = JSON.parse(JSON.stringify(component));\n    summaryAuthoringController = $controller('SummaryAuthoringController',\n        {\n          $scope: $scope,\n          ProjectService: ProjectService\n        });\n  };\n\n  beforeEach(angular.mock.module(mainModule.name));\n\n  beforeEach(inject((_$controller_, _$rootScope_, _ProjectService_) => {\n    $controller = _$controller_;\n    $rootScope = _$rootScope_;\n    ProjectService = _ProjectService_;\n    loadComponent();\n  }));\n\n  it('should check if the summary is allowed for a component type', () => {\n    expect(summaryAuthoringController.isComponentTypeAllowed('HTML')).toBeFalsy();\n    expect(summaryAuthoringController.isComponentTypeAllowed('OutsideURL')).toBeFalsy();\n    expect(summaryAuthoringController.isComponentTypeAllowed('Summary')).toBeFalsy();\n    expect(summaryAuthoringController.isComponentTypeAllowed('Animation')).toBeTruthy();\n    expect(summaryAuthoringController.isComponentTypeAllowed('AudioOscillator')).toBeTruthy();\n    expect(summaryAuthoringController.isComponentTypeAllowed('ConceptMap')).toBeTruthy();\n    expect(summaryAuthoringController.isComponentTypeAllowed('Discussion')).toBeTruthy();\n    expect(summaryAuthoringController.isComponentTypeAllowed('Draw')).toBeTruthy();\n    expect(summaryAuthoringController.isComponentTypeAllowed('Embedded')).toBeTruthy();\n    expect(summaryAuthoringController.isComponentTypeAllowed('Graph')).toBeTruthy();\n    expect(summaryAuthoringController.isComponentTypeAllowed('Label')).toBeTruthy();\n    expect(summaryAuthoringController.isComponentTypeAllowed('Match')).toBeTruthy();\n    expect(summaryAuthoringController.isComponentTypeAllowed('MultipleChoice')).toBeTruthy();\n    expect(summaryAuthoringController.isComponentTypeAllowed('OpenResponse')).toBeTruthy();\n    expect(summaryAuthoringController.isComponentTypeAllowed('Table')).toBeTruthy();\n  });\n\n  it(`should check that the component id is not automatically set when the node id is changed if \n      there are no allowed components`, () => {\n    spyOn(summaryAuthoringController, 'authoringViewComponentChanged');\n    const components = [\n      { id: '4ty89q3hj0', type: 'HTML' }\n    ];\n    expect(summaryAuthoringController.authoringComponentContent.summaryComponentId)\n        .toEqual('zptq1ndv4h');\n    spyOn(summaryAuthoringController, 'getComponentsByNodeId').and.returnValue(components);\n    summaryAuthoringController.authoringSummaryNodeIdChanged();\n    expect(summaryAuthoringController.authoringComponentContent.summaryComponentId).toBe(null);\n  });\n\n  it(`should check that the component id is not automatically set when the node id is changed if \n      there are multiple allowed components`, () => {\n    spyOn(summaryAuthoringController, 'authoringViewComponentChanged');\n    const components = [\n      { id: '34j45u9w4j', type: 'OpenResponse' },\n      { id: 'dghm45su45', type: 'MultipleChoice' }\n    ];\n    expect(summaryAuthoringController.authoringComponentContent.summaryComponentId)\n        .toEqual('zptq1ndv4h');\n    spyOn(summaryAuthoringController, 'getComponentsByNodeId').and.returnValue(components);\n    summaryAuthoringController.authoringSummaryNodeIdChanged();\n    expect(summaryAuthoringController.authoringComponentContent.summaryComponentId)\n        .toBe(null);\n  });\n\n  it(`should check that the component id is automatically set when the node id is changed if there \n      is one allowed component`, () => {\n    spyOn(summaryAuthoringController, 'authoringViewComponentChanged');\n    const components = [\n      { id: '34j45u9w4j', type: 'HTML' },\n      { id: 'dghm45su45', type: 'MultipleChoice' }\n    ];\n    expect(summaryAuthoringController.authoringComponentContent.summaryComponentId)\n        .toEqual('zptq1ndv4h');\n    spyOn(summaryAuthoringController, 'getComponentsByNodeId').and.returnValue(components);\n    summaryAuthoringController.authoringSummaryNodeIdChanged();\n    expect(summaryAuthoringController.authoringComponentContent.summaryComponentId)\n        .toBe('dghm45su45');\n  });\n\n  it('should update the other prompt', () => {\n    expect(summaryAuthoringController.otherPrompt).toEqual(null);\n    const otherComponent = { id: 'hxh43zj46j', prompt: 'This is hxh43zj46j' };\n    spyOn(ProjectService, 'getComponentByNodeIdAndComponentId').and.returnValue(otherComponent);\n    summaryAuthoringController.updateOtherPrompt();\n    expect(summaryAuthoringController.otherPrompt).toEqual('This is hxh43zj46j');\n  });\n\n  it('should check if student data type is available for a component when it should be true', \n      () => {\n    const component = { id: 'hxh43zj46j', prompt: 'This is hxh43zj46j', type: 'OpenResponse'};\n    spyOn(ProjectService, 'getComponentByNodeIdAndComponentId').and.returnValue(component);\n    const isAvailable = summaryAuthoringController.isStudentDataTypeAvailableForComponent(\n        'node1', 'hxh43zj46j', 'scores');\n    expect(isAvailable).toBeTruthy();\n  });\n\n  it('should check if student data type is available for a component when it should be false', \n      () => {\n    const component = { id: 'hxh43zj46j', prompt: 'This is hxh43zj46j', type: 'OpenResponse'};\n    spyOn(ProjectService, 'getComponentByNodeIdAndComponentId').and.returnValue(component);\n    const isAvailable = summaryAuthoringController.isStudentDataTypeAvailableForComponent(\n        'node1', 'hxh43zj46j', 'responses');\n    expect(isAvailable).toBeFalsy();\n  });\n\n  it(`should check if a component has a correct answer when the component type does not have \n      correctness`, () => {\n    const component = { id: 'hxh43zj46j', prompt: 'This is hxh43zj46j', type: 'OpenResponse'};\n    spyOn(ProjectService, 'getComponentByNodeIdAndComponentId').and.returnValue(component);\n    const hasCorrectAnswer = summaryAuthoringController.componentHasCorrectAnswer();\n    expect(hasCorrectAnswer).toBeFalsy();\n  });\n\n  it(`should check if a component type that allows correct answers has a correct answer when it \n      should be false`, () => {\n    const component = {\n      id: 'hxh43zj46j',\n      prompt: 'This is hxh43zj46j',\n      type: 'MultipleChoice',\n      choices: [\n        { id: 1, text: 'red', isCorrect: false },\n        { id: 1, text: 'blue', isCorrect: false },\n        { id: 1, text: 'green', isCorrect: false }\n      ]\n    };\n    spyOn(ProjectService, 'getComponentByNodeIdAndComponentId').and.returnValue(component);\n    const hasCorrectAnswer = summaryAuthoringController.componentHasCorrectAnswer();\n    expect(hasCorrectAnswer).toBeFalsy();\n  });\n\n  it(`should check if a component that allows correct answers has a correct answer when it should be\n      true`, () => {\n    const component = {\n      id: 'hxh43zj46j',\n      prompt: 'This is hxh43zj46j',\n      type: 'MultipleChoice',\n      choices: [\n        { id: 1, text: 'red', isCorrect: false },\n        { id: 1, text: 'blue', isCorrect: true },\n        { id: 1, text: 'green', isCorrect: false }\n      ]\n    };\n    spyOn(ProjectService, 'getComponentByNodeIdAndComponentId').and.returnValue(component);\n    const hasCorrectAnswer = summaryAuthoringController.componentHasCorrectAnswer();\n    expect(hasCorrectAnswer).toBeTruthy();\n  });\n\n});\n"],"file":"summaryAuthoringController.spec.js"}