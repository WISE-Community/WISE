{"version":3,"sources":["src/main/webapp/wise5/directives/summaryDisplay/summaryDisplay.es6"],"names":["SummaryDisplayController","$filter","$injector","$q","AnnotationService","ConfigService","ProjectService","UtilService","$translate","numDummySamples","defaultMaxScore","maxScore","dataService","hasCorrectness","chartType","isVLEPreview","isStudentRun","get","isClassroomMonitor","isAuthoringPreview","renderDisplay","$onChanges","changes","colors","palette","singleHue","correct","incorrect","isPreview","isAuthoring","summaryComponent","getComponentByNodeIdAndComponentId","nodeId","componentId","studentDataType","getComponentStates","periodId","then","componentStates","processComponentStates","setMaxScore","getScores","annotations","processScoreAnnotations","clearChartConfig","component","chartConfig","options","legend","enabled","exporting","credits","getDummyStudentWorkForVLEPreview","getDummyStudentWorkForAuthoringPreview","getClassmateStudentWork","retrieveLatestStudentDataByNodeIdAndComponentIdAndPeriodId","getDummyStudentScoresForVLEPreview","getDummyStudentScoresForAuthoringPreview","getClassmateScores","filterLatestScoreAnnotations","getAnnotationsByNodeIdAndPeriodId","resolveData","latestAnnotations","annotation","type","setLatestAnnotationIfNewer","convertObjectToArray","workgroupId","toWorkgroupId","latestAnnotation","serverSaveTime","obj","Object","keys","map","key","createDummyComponentStates","componentState","getLatestComponentStateByNodeIdAndComponentId","push","createDummyScoreAnnotations","getLatestScoreAnnotation","getWorkgroupId","data","deferred","defer","setTimeout","resolve","promise","choices","dummyComponentStates","dummyCounter","createDummyComponentState","studentData","studentChoices","id","getRandomChoice","Math","floor","random","length","dummyScoreAnnotations","createDummyScoreAnnotation","value","getRandomScore","ceil","summaryData","createChoicesSummaryData","createChoicesSeriesData","calculateCountsAndPercentage","renderGraph","updateMaxScoreIfNecessary","createScoresSummaryData","createScoresSeriesData","total","calculateMaxScore","maxScoreSoFar","score","getScoreFromAnnotation","max","choice","createChoiceSummaryData","text","isCorrect","addComponentStateDataToSummaryData","count","incrementSummaryData","hasCorrectAnswer","getSummaryDataCount","color","getDataPointColor","highlightCorrectAnswer","dataPoint","createDataPoint","name","y","scoreValue","createScoreSummaryData","addAnnotationDataToSummaryData","title","getGraphTitle","xAxisType","series","createSeries","getChartColors","createChartConfig","dataLabels","showInLegend","isStudentDataTypeResponses","totalResponses","numResponses","totalTeams","totalWorkgroups","percentResponded","isStudentDataTypeScores","step","opacity","i","rgbToHex","isStudentDataType","chart","style","fontFamily","tooltip","formatter","s","point","pct","round","plotOptions","colorByPoint","column","maxPointWidth","xAxis","labels","yAxis","grouping","events","legendItemClick","dataCount","getTotalWorkgroups","getPercentResponded","numWorkgroups","getNumberOfWorkgroupsInPeriod","$inject","SummaryDisplay","bindings","hasWarning","warningMessage","templateUrl","controller","controllerAs"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nclass SummaryDisplayController {\r\n  constructor($filter, $injector, $q, AnnotationService, ConfigService, ProjectService, \r\n        UtilService) {\r\n    this.$filter = $filter;\r\n    this.$injector = $injector;\r\n    this.$q = $q;\r\n    this.AnnotationService = AnnotationService;\r\n    this.ConfigService = ConfigService;\r\n    this.ProjectService = ProjectService;\r\n    this.UtilService = UtilService;\r\n    this.$translate = this.$filter('translate');\r\n    this.numDummySamples = 20;\r\n    this.defaultMaxScore = 5;\r\n    this.maxScore = this.defaultMaxScore;\r\n    this.dataService = null;\r\n    this.hasCorrectness = false;\r\n    if (this.chartType == null) {\r\n      this.chartType = 'column';\r\n    }\r\n    if (this.isVLEPreview() || this.isStudentRun()) {\r\n      this.dataService = this.$injector.get('StudentDataService');\r\n    } else if (this.isClassroomMonitor() || this.isAuthoringPreview()) {\r\n      this.dataService = this.$injector.get('TeacherDataService'); \r\n    }\r\n    this.renderDisplay();\r\n    if (this.isAuthoringPreview()) {\r\n      this.$onChanges = (changes) => {\r\n        this.renderDisplay();\r\n      }\r\n    }\r\n    this.colors = {\r\n      palette: ['#1a237e','#701e82','#aa187b','#d72c6c','#f65158','#ff7d43','#ffab32','#fdd835',\r\n          '#ffee58','#ade563','#50d67f','#00c29d','#00aab3','#0090bc','#0074b4','#01579b'],\r\n      singleHue: 'rgb(170, 24, 123)',\r\n      correct: '#00C853',\r\n      incorrect: '#c62828'\r\n    }\r\n  }\r\n\r\n  isVLEPreview() {\r\n    return this.ConfigService.isPreview();\r\n  }\r\n\r\n  isAuthoringPreview() {\r\n    return this.ConfigService.isAuthoring();\r\n  }\r\n\r\n  isStudentRun() {\r\n    return this.ConfigService.isStudentRun();\r\n  }\r\n\r\n  isClassroomMonitor() {\r\n    return this.ConfigService.isClassroomMonitor();\r\n  }\r\n\r\n  renderDisplay() {\r\n    const summaryComponent = \r\n        this.ProjectService.getComponentByNodeIdAndComponentId(this.nodeId, this.componentId);\r\n    if (summaryComponent != null) {\r\n      if (this.studentDataType === 'responses') {\r\n        this.getComponentStates(this.nodeId, this.componentId, this.periodId)\r\n            .then((componentStates = []) => {\r\n          this.processComponentStates(componentStates);\r\n        });\r\n      } else if (this.studentDataType === 'scores') {\r\n        this.setMaxScore(summaryComponent);\r\n        this.getScores(this.nodeId, this.componentId, this.periodId).then((annotations) => {\r\n          this.processScoreAnnotations(annotations);\r\n        });\r\n      }\r\n    } else {\r\n      this.clearChartConfig();\r\n    }\r\n  }\r\n\r\n  setMaxScore(component) {\r\n    if (component.maxScore != null) {\r\n      this.maxScore = component.maxScore;\r\n    } else {\r\n      this.maxScore = this.defaultMaxScore;\r\n    }\r\n  }\r\n\r\n  clearChartConfig() {\r\n    this.chartConfig = {\r\n      options: {\r\n        legend: {\r\n          enabled: false\r\n        },\r\n        exporting: {\r\n          enabled: false\r\n        },\r\n        credits: {\r\n          enabled: false\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  getComponentStates(nodeId, componentId, periodId) {\r\n    if (this.isVLEPreview()) {\r\n      return this.getDummyStudentWorkForVLEPreview(nodeId, componentId);\r\n    } else if (this.isAuthoringPreview()) {\r\n      return this.getDummyStudentWorkForAuthoringPreview(nodeId, componentId);\r\n    } else if (this.isStudentRun()) {\r\n      return this.dataService.getClassmateStudentWork(nodeId, componentId, periodId);\r\n    } else if (this.isClassroomMonitor()) {\r\n      return this.dataService.retrieveLatestStudentDataByNodeIdAndComponentIdAndPeriodId(\r\n          nodeId, componentId, periodId);\r\n    }\r\n  }\r\n\r\n  getScores(nodeId, componentId, periodId) {\r\n    if (this.isVLEPreview()) {\r\n      return this.getDummyStudentScoresForVLEPreview(nodeId, componentId);\r\n    } else if (this.isAuthoringPreview()) {\r\n      return this.getDummyStudentScoresForAuthoringPreview(nodeId, componentId);\r\n    } else if (this.isStudentRun()) {\r\n      return this.dataService.getClassmateScores(nodeId, componentId, periodId\r\n          ).then((annotations) => {\r\n        return this.filterLatestScoreAnnotations(annotations);\r\n      });\r\n    } else if (this.isClassroomMonitor()) {\r\n      const annotations = this.dataService.getAnnotationsByNodeIdAndPeriodId(nodeId, periodId);\r\n      return this.resolveData(this.filterLatestScoreAnnotations(annotations));\r\n    }\r\n  }\r\n\r\n  filterLatestScoreAnnotations(annotations) {\r\n    const latestAnnotations = {};\r\n    for (const annotation of annotations) {\r\n      if (annotation.type === 'score' || annotation.type === 'autoScore') {\r\n        this.setLatestAnnotationIfNewer(latestAnnotations, annotation);\r\n      }\r\n    }\r\n    return this.convertObjectToArray(latestAnnotations);\r\n  }\r\n\r\n  setLatestAnnotationIfNewer(latestAnnotations, annotation) {\r\n    const workgroupId = annotation.toWorkgroupId;\r\n    const latestAnnotation = latestAnnotations[workgroupId];\r\n    if (latestAnnotation == null || annotation.serverSaveTime > latestAnnotation.serverSaveTime) {\r\n      latestAnnotations[workgroupId] = annotation;\r\n    }\r\n  }\r\n\r\n  convertObjectToArray(obj) {\r\n    return Object.keys(obj).map((key) => {\r\n      return obj[key]\r\n    }) \r\n  }\r\n\r\n  getDummyStudentWorkForVLEPreview(nodeId, componentId) {\r\n    const componentStates = this.createDummyComponentStates();\r\n    const componentState = this.dataService\r\n        .getLatestComponentStateByNodeIdAndComponentId(nodeId, componentId);\r\n    if (componentState != null) {\r\n      componentStates.push(componentState);\r\n    }\r\n    return this.resolveData(componentStates);\r\n  }\r\n\r\n  getDummyStudentScoresForVLEPreview(nodeId, componentId) {\r\n    const annotations = this.createDummyScoreAnnotations();\r\n    const annotation = this.AnnotationService.getLatestScoreAnnotation(\r\n        nodeId, componentId, this.ConfigService.getWorkgroupId());\r\n    if (annotation != null) {\r\n      annotations.push(annotation);\r\n    }\r\n    return this.resolveData(annotations);\r\n  }\r\n\r\n  getDummyStudentWorkForAuthoringPreview() {\r\n    return this.resolveData(this.createDummyComponentStates());\r\n  }\r\n\r\n  getDummyStudentScoresForAuthoringPreview() {\r\n    return this.resolveData(this.createDummyScoreAnnotations());\r\n  }\r\n\r\n  resolveData(data) {\r\n    const deferred = this.$q.defer();\r\n    // We need to set a delay otherwise the graph won't render properly\r\n    setTimeout(() => {\r\n      deferred.resolve(data);\r\n    }, 1);\r\n    return deferred.promise;\r\n  }\r\n\r\n  createDummyComponentStates() {\r\n    const component = this.ProjectService.getComponentByNodeIdAndComponentId(\r\n        this.nodeId, this.componentId);\r\n    const choices = component.choices;\r\n    const dummyComponentStates = [];\r\n    for (let dummyCounter = 0; dummyCounter < this.numDummySamples; dummyCounter++) {\r\n      dummyComponentStates.push(this.createDummyComponentState(choices));\r\n    }\r\n    return dummyComponentStates;\r\n  }\r\n\r\n  createDummyComponentState(choices) {\r\n    return {\r\n      studentData: {\r\n        studentChoices: [\r\n          { id: this.getRandomChoice(choices).id }\r\n        ]\r\n      }\r\n    }; \r\n  }\r\n  \r\n  getRandomChoice(choices) {\r\n    return choices[Math.floor(Math.random() * choices.length)];\r\n  }\r\n\r\n  createDummyScoreAnnotations() {\r\n    const dummyScoreAnnotations = [];\r\n    for (let dummyCounter = 0; dummyCounter < this.numDummySamples; dummyCounter++) {\r\n      dummyScoreAnnotations.push(this.createDummyScoreAnnotation());\r\n    }\r\n    return dummyScoreAnnotations;\r\n  }\r\n\r\n  createDummyScoreAnnotation() {\r\n    return {\r\n      data: {\r\n        value: this.getRandomScore()\r\n      },\r\n      type: 'score'\r\n    }; \r\n  }\r\n\r\n  getRandomScore() {\r\n    return Math.ceil(Math.random() * this.maxScore);\r\n  }\r\n\r\n  processComponentStates(componentStates) {\r\n    const component = this.ProjectService.getComponentByNodeIdAndComponentId(\r\n        this.nodeId, this.componentId);\r\n    const summaryData = this.createChoicesSummaryData(component, componentStates);\r\n    const data = this.createChoicesSeriesData(component, summaryData);\r\n    this.calculateCountsAndPercentage(componentStates.length);\r\n    this.renderGraph(data, componentStates.length);\r\n  }\r\n\r\n  processScoreAnnotations(annotations) {\r\n    this.updateMaxScoreIfNecessary(annotations);\r\n    const summaryData = this.createScoresSummaryData(annotations);\r\n    const { data, total } = this.createScoresSeriesData(summaryData);\r\n    this.calculateCountsAndPercentage(annotations.length);\r\n    this.renderGraph(data, total);\r\n  }\r\n  \r\n  updateMaxScoreIfNecessary(annotations) {\r\n    this.maxScore = this.calculateMaxScore(annotations);\r\n  }\r\n\r\n  calculateMaxScore(annotations) {\r\n    let maxScoreSoFar = this.maxScore;\r\n    for (const annotation of annotations) {\r\n      const score = this.getScoreFromAnnotation(annotation);\r\n      maxScoreSoFar = Math.max(this.maxScore, score);\r\n    }\r\n    return maxScoreSoFar;\r\n  }\r\n\r\n  createChoicesSummaryData(component, componentStates) {\r\n    const summaryData = {};\r\n    for (const choice of component.choices) {\r\n      summaryData[choice.id] = this.createChoiceSummaryData(\r\n          choice.id, choice.text, choice.isCorrect);\r\n    }\r\n    for (const componentState of componentStates) {\r\n      this.addComponentStateDataToSummaryData(summaryData, componentState);\r\n    }\r\n    return summaryData;\r\n  }\r\n\r\n  createChoiceSummaryData(id, text, isCorrect) {\r\n    return {\r\n      id: id,\r\n      text: text,\r\n      isCorrect: isCorrect,\r\n      count: 0\r\n    };\r\n  }\r\n\r\n  addComponentStateDataToSummaryData(summaryData, componentState) {\r\n    for (const choice of componentState.studentData.studentChoices) {\r\n      this.incrementSummaryData(summaryData, choice.id);\r\n    }\r\n  }\r\n\r\n  createChoicesSeriesData(component, summaryData) {\r\n    const data = [];\r\n    this.hasCorrectness = this.hasCorrectAnswer(component);\r\n    for (const choice of component.choices) {\r\n      const count = this.getSummaryDataCount(summaryData, choice.id);\r\n      const color = this.getDataPointColor(choice);\r\n      let text = choice.text;\r\n      if (this.highlightCorrectAnswer && this.chartType === 'pie') {\r\n        text = text + ' (' + \r\n          (choice.isCorrect ? this.$translate('CORRECT') : this.$translate('INCORRECT')) + ')';\r\n      }\r\n      const dataPoint = this.createDataPoint(text, count, color);\r\n      data.push(dataPoint);\r\n    }\r\n    return data;\r\n  }\r\n\r\n  hasCorrectAnswer(component) {\r\n    for (const choice of component.choices) {\r\n      if (choice.isCorrect) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getDataPointColor(choice) {\r\n    let color = null;\r\n    if (this.highlightCorrectAnswer) {\r\n      if (choice.isCorrect) {\r\n        color = this.colors.correct;\r\n      } else {\r\n        color = this.colors.incorrect;\r\n      }\r\n    }\r\n    return color;\r\n  }\r\n  \r\n  createDataPoint(name, y, color) {\r\n    if (color) {\r\n      return {\r\n        name: name,\r\n        y: y,\r\n        color: color\r\n      };\r\n    } else {\r\n      return {\r\n        name: name,\r\n        y: y\r\n      };\r\n    }\r\n  }\r\n\r\n  createScoresSummaryData(annotations) {\r\n    const summaryData = {};\r\n    for (let scoreValue = 0; scoreValue <= this.maxScore; scoreValue++) {\r\n      summaryData[scoreValue] = this.createScoreSummaryData(scoreValue);\r\n    }\r\n    for (const annotation of annotations) {\r\n      this.addAnnotationDataToSummaryData(summaryData, annotation);\r\n    }\r\n    return summaryData;\r\n  }\r\n\r\n  createScoreSummaryData(score) {\r\n    return {\r\n      score: score,\r\n      count: 0\r\n    };\r\n  }\r\n\r\n  addAnnotationDataToSummaryData(summaryData, annotation) {\r\n    const score = this.getScoreFromAnnotation(annotation);\r\n    this.incrementSummaryData(summaryData, score);\r\n  }\r\n\r\n  getScoreFromAnnotation(annotation) {\r\n    return annotation.data.value;\r\n  }\r\n\r\n  incrementSummaryData(summaryData, id) {\r\n    summaryData[id].count += 1;\r\n  }\r\n\r\n  createScoresSeriesData(summaryData) {\r\n    const data = [];\r\n    let total = 0;\r\n    for (let scoreValue = 1; scoreValue <= this.maxScore; scoreValue++) {\r\n      const count = this.getSummaryDataCount(summaryData, scoreValue);\r\n      const dataPoint = this.createDataPoint(scoreValue, count);\r\n      data.push(dataPoint);\r\n      total += count;\r\n    }\r\n    return { data: data, total: total }; \r\n  }\r\n\r\n  renderGraph(data, total) {\r\n    const chartType = this.chartType;\r\n    const title = this.getGraphTitle();\r\n    const xAxisType = 'category';\r\n    const series = this.createSeries(data);\r\n    const colors = this.getChartColors();\r\n    this.chartConfig =  this.createChartConfig(chartType, title, xAxisType, total, series, colors);\r\n  }\r\n\r\n  createSeries(data) {\r\n    if (this.highlightCorrectAnswer && this.chartType === 'column') {\r\n      return [\r\n        {\r\n          data: data,\r\n          dataLabels: {\r\n            enabled: true\r\n          },\r\n          showInLegend: false\r\n        },\r\n        {\r\n          name: this.$translate('CORRECT'),\r\n          color: this.colors.correct\r\n        },\r\n        {\r\n          name: this.$translate('INCORRECT'),\r\n          color: this.colors.incorrect\r\n        }\r\n      ];\r\n    } else {\r\n      return [{\r\n        data: data,\r\n        dataLabels: {\r\n          enabled: true\r\n        }\r\n      }];\r\n    }\r\n  }\r\n\r\n  getGraphTitle() {\r\n    if (this.isStudentDataTypeResponses()) {\r\n      return this.$translate('CLASS_RESPONSES') + ' | ' + \r\n        this.$translate('PERCENT_OF_CLASS_RESPONDED', { \r\n          totalResponses: this.numResponses, \r\n          totalTeams: this.totalWorkgroups,\r\n          percentResponded: this.percentResponded\r\n      });\r\n    } else if (this.isStudentDataTypeScores()) {\r\n      return this.$translate('CLASS_SCORES') + ' | ' + \r\n        this.$translate('PERCENT_OF_CLASS_RESPONDED', { \r\n          totalResponses: this.numResponses, \r\n          totalTeams: this.totalWorkgroups,\r\n          percentResponded: this.percentResponded\r\n      });\r\n    }\r\n  }\r\n\r\n  getChartColors() {\r\n    if (this.studentDataType === 'responses') {\r\n      return this.colors.palette;\r\n    } else {\r\n      let colors = [];\r\n      const step = 100/this.maxScore/100*.9;\r\n      let opacity = .1;\r\n      for (let i = 0; i < this.maxScore; i++) {\r\n        opacity = opacity + step;\r\n        const color = this.UtilService.rgbToHex(this.colors.singleHue, opacity);\r\n        colors.push(color);\r\n      }\r\n      return colors;\r\n    }\r\n  }\r\n\r\n  isStudentDataTypeResponses() {\r\n    return this.isStudentDataType('responses');\r\n  }\r\n\r\n  isStudentDataTypeScores() {\r\n    return this.isStudentDataType('scores');\r\n  }\r\n  \r\n  isStudentDataType(studentDataType) {\r\n    return this.studentDataType === studentDataType;\r\n  }\r\n\r\n  createChartConfig(chartType, title, xAxisType, total, series, colors) {\r\n    const chartConfig = {\r\n      options: {\r\n        colors: colors,\r\n        chart: {\r\n          type: chartType,\r\n          style: {\r\n            fontFamily: 'Roboto,Helvetica Neue,sans-serif'\r\n          }\r\n        },\r\n        legend: {\r\n          enabled: false\r\n        },\r\n        tooltip: {\r\n          formatter: function(s, point) {\r\n            if (chartType === 'pie') {\r\n              return '<b>' + this.key + '</b>: ' + this.y;\r\n            } else {\r\n              const pct = Math.round(this.y / total * 100);\r\n              return '<b>' + this.key + '</b>: ' + pct + '%';\r\n            }\r\n          }\r\n        },\r\n        exporting: {\r\n          enabled: false\r\n        },\r\n        credits: {\r\n          enabled: false\r\n        },\r\n        plotOptions: {\r\n          series: {\r\n            colorByPoint: true,\r\n            dataLabels: {\r\n              formatter: function() {\r\n                if (chartType === 'pie') {\r\n                  const pct = Math.round(this.y / total * 100);\r\n                  return this.key + ': ' + pct + '%';\r\n                } else {\r\n                  return this.y;\r\n                }\r\n              },\r\n              style: {'fontSize': '12px'}\r\n            }\r\n          },\r\n          column: {\r\n            maxPointWidth: 80\r\n          }\r\n        }\r\n      },\r\n      title: {\r\n        text: title,\r\n        style: {'fontSize': '16px', 'fontWeight': '500'}\r\n      },\r\n      xAxis: {\r\n        type: xAxisType,\r\n        labels: {\r\n          style: {'fontSize': '14px'}\r\n        }\r\n      },\r\n      yAxis: {\r\n        title: {\r\n          text: this.$translate('COUNT'),\r\n          style: {'fontSize': '14px'}\r\n        }\r\n      },\r\n      series: series\r\n    };\r\n    if (this.highlightCorrectAnswer) {\r\n      chartConfig.options.legend.enabled = true;\r\n      chartConfig.options.plotOptions.series.colorByPoint = false;\r\n      chartConfig.options.plotOptions.series.grouping = false;\r\n      chartConfig.options.plotOptions.series.events = {\r\n        legendItemClick: function() {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return chartConfig;\r\n  }\r\n\r\n  calculateCountsAndPercentage(dataCount) {\r\n    this.numResponses = dataCount;\r\n    this.totalWorkgroups = this.getTotalWorkgroups(dataCount);\r\n    this.percentResponded = this.getPercentResponded(dataCount, this.totalWorkgroups); \r\n  }\r\n\r\n  getTotalWorkgroups(dataCount) {\r\n    if (this.isVLEPreview() || this.isAuthoringPreview()) {\r\n      return dataCount;\r\n    } else {\r\n      const numWorkgroups = this.ConfigService.getNumberOfWorkgroupsInPeriod(this.periodId);\r\n      return Math.max(numWorkgroups, dataCount);\r\n    }\r\n  }\r\n\r\n  getPercentResponded(numResponses, totalWorkgroups) {\r\n    return Math.floor(100 * numResponses / totalWorkgroups);\r\n  }\r\n\r\n  getSummaryDataCount(summaryData, id) {\r\n    return summaryData[id].count;\r\n  }\r\n}\r\n\r\nSummaryDisplayController.$inject = [\r\n  '$filter',\r\n  '$injector',\r\n  '$q',\r\n  'AnnotationService',\r\n  'ConfigService',\r\n  'ProjectService',\r\n  'UtilService'\r\n];\r\n\r\nconst SummaryDisplay = {\r\n  bindings: {\r\n    nodeId: '<',\r\n    componentId: '<',\r\n    highlightCorrectAnswer: '<',\r\n    studentDataType: '<',\r\n    periodId: '<',\r\n    chartType: '<',\r\n    hasWarning: '<',\r\n    warningMessage: '<'\r\n  },\r\n  templateUrl: 'wise5/directives/summaryDisplay/summaryDisplay.html',\r\n  controller: SummaryDisplayController,\r\n  controllerAs: 'summaryDisplayCtrl'\r\n}\r\n\r\nexport default SummaryDisplay;\r\n"],"file":"summaryDisplay.js"}