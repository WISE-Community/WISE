{"version":3,"sources":["drawAuthoringController.es6"],"names":["DrawAuthoringController","$filter","$injector","$mdDialog","$q","$rootScope","$scope","$timeout","AnnotationService","ConfigService","DrawService","NodeService","NotebookService","ProjectService","StudentAssetService","StudentDataService","UtilService","allowedConnectedComponentTypes","type","isResetButtonVisible","drawingToolId","nodeId","componentId","$watch","authoringComponentContent","bind","newValue","oldValue","componentContent","injectAssetPaths","submitCounter","initializeDrawingTool","isSaveButtonVisible","showSaveButton","isSubmitButtonVisible","showSubmitButton","event","args","isEventTargetThisComponent","fileName","assetItem","target","summernoteId","getSummernoteId","restoreSummernoteCursorPosition","fullAssetPath","getFullAssetPath","isImage","insertImageIntoSummernote","isVideo","insertVideoIntoSummernote","background","authoringViewBackgroundChanged","stampIndex","targetObject","setStampImage","hide","initializeAuthoringComponentContentStampsIfNecessary","stamps","Stamps","push","authoringViewComponentChanged","index","stamp","splice","length","confirm","$translate","tools","select","line","shape","freeHand","text","strokeColor","fillColor","clone","strokeWidth","sendBack","sendForward","undo","redo","drawData","getDrawData","starterDrawData","drawingTool","clear","width","updateStarterDrawDataWidth","authoringInitializeDrawingToolAfterTimeout","starterDrawDataJSONObject","angular","fromJson","dt","toJson","height","updateStarterDrawDataHeight","params","isPopup","$broadcast","updateStarterDrawDataBackground","starterDrawDataJSON","canvas","backgroundImage","src","projectAssetsDirectoryPath","getProjectAssetsDirectoryPath","newSrc","setBackgroundImage","connectedComponent","components","getComponentsByNodeId","numberOfAllowedComponents","allowedComponent","component","isConnectedComponentTypeAllowed","id","authoringSetImportWorkAsBackgroundIfApplicable","componentType","authoringGetConnectedComponentType","importWorkAsBackground","DrawController","$inject"],"mappings":"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","sourcesContent":["'use strict';\n\nimport DrawController from \"./drawController\";\nimport drawingTool from 'lib/drawingTool/drawing-tool';\nimport drawingToolVendor from 'lib/drawingTool/vendor.min';\nimport html2canvas from 'html2canvas';\n\nclass DrawAuthoringController extends DrawController {\n  constructor($filter,\n              $injector,\n              $mdDialog,\n              $q,\n              $rootScope,\n              $scope,\n              $timeout,\n              AnnotationService,\n              ConfigService,\n              DrawService,\n              NodeService,\n              NotebookService,\n              ProjectService,\n              StudentAssetService,\n              StudentDataService,\n              UtilService) {\n    super($filter,\n      $injector,\n      $mdDialog,\n      $q,\n      $rootScope,\n      $scope,\n      $timeout,\n      AnnotationService,\n      ConfigService,\n      DrawService,\n      NodeService,\n      NotebookService,\n      ProjectService,\n      StudentAssetService,\n      StudentDataService,\n      UtilService);\n\n    this.allowedConnectedComponentTypes = [\n      { type: 'ConceptMap' },\n      { type: 'Draw' },\n      { type: 'Embedded' },\n      { type: 'Graph' },\n      { type: 'Label' },\n      { type: 'Table' }\n    ];\n\n    this.isResetButtonVisible = true;\n    this.drawingToolId = 'drawingtool_' + this.nodeId + '_' + this.componentId;\n\n    $scope.$watch(function() {\n      return this.authoringComponentContent;\n    }.bind(this), function(newValue, oldValue) {\n      this.componentContent = this.ProjectService.injectAssetPaths(newValue);\n      this.submitCounter = 0;\n      this.initializeDrawingTool();\n      this.isSaveButtonVisible = this.componentContent.showSaveButton;\n      this.isSubmitButtonVisible = this.componentContent.showSubmitButton;\n    }.bind(this), true);\n  }\n\n  assetSelected(event, args) {\n    if (this.isEventTargetThisComponent(args)) {\n      const fileName = args.assetItem.fileName;\n      if (args.target === 'rubric') {\n        const summernoteId = this.getSummernoteId(args);\n        this.restoreSummernoteCursorPosition(summernoteId);\n        const fullAssetPath = this.getFullAssetPath(fileName);\n        if (this.UtilService.isImage(fileName)) {\n          this.insertImageIntoSummernote(summernoteId, fullAssetPath, fileName);\n        } else if (this.UtilService.isVideo(fileName)) {\n          this.insertVideoIntoSummernote(summernoteId, fullAssetPath);\n        }\n      } else if (args.target === 'background') {\n        this.authoringComponentContent.background = fileName;\n        this.authoringViewBackgroundChanged();\n      } else if (args.target === 'stamp') {\n        const stampIndex = args.targetObject;\n        this.setStampImage(stampIndex, fileName);\n        this.authoringViewBackgroundChanged();\n      }\n    }\n    this.$mdDialog.hide();\n  }\n\n  authoringAddStampButtonClicked() {\n    this.initializeAuthoringComponentContentStampsIfNecessary();\n    /*\n     * create the stamp as an empty string that the author will replace\n     * with a file name or url\n     */\n    this.authoringComponentContent.stamps.Stamps.push('');\n    this.authoringViewComponentChanged();\n  }\n\n  initializeAuthoringComponentContentStampsIfNecessary() {\n    if (this.authoringComponentContent != null) {\n      if (this.authoringComponentContent.stamps == null) {\n        this.authoringComponentContent.stamps = {};\n      }\n      if (this.authoringComponentContent.stamps.Stamps == null) {\n        this.authoringComponentContent.stamps.Stamps = [];\n      }\n    }\n  }\n\n  /**\n   * Move a stamp up in the authoring view\n   * @param index the index of the stamp to move\n   */\n  authoringMoveStampUp(index) {\n    if (index != 0) {\n      const stamp = this.authoringComponentContent.stamps.Stamps[index];\n      this.authoringComponentContent.stamps.Stamps.splice(index, 1);\n      this.authoringComponentContent.stamps.Stamps.splice(index - 1, 0, stamp);\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Move the stamp down in the authoring view\n   * @param index the index of the stamp to move\n   */\n  authoringMoveStampDown(index) {\n    if (index != this.authoringComponentContent.stamps.Stamps.length - 1) {\n      const stamp = this.authoringComponentContent.stamps.Stamps[index];\n      this.authoringComponentContent.stamps.Stamps.splice(index, 1);\n      this.authoringComponentContent.stamps.Stamps.splice(index + 1, 0, stamp);\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  /**\n   * Delete a stamp from the authoring view\n   * @param index the index of the stamp\n   */\n  authoringDeleteStampClicked(index) {\n    if (confirm(this.$translate('draw.areYouSureYouWantToDeleteThisStamp') + '\\n\\n' + this.authoringComponentContent.stamps.Stamps[index])) {\n      this.authoringComponentContent.stamps.Stamps.splice(index, 1);\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  authoringEnableAllToolsButtonClicked() {\n    if (this.authoringComponentContent.tools == null) {\n      this.authoringComponentContent.tools = {};\n    }\n    this.authoringComponentContent.tools.select = true;\n    this.authoringComponentContent.tools.line = true;\n    this.authoringComponentContent.tools.shape = true;\n    this.authoringComponentContent.tools.freeHand = true;\n    this.authoringComponentContent.tools.text = true;\n    this.authoringComponentContent.tools.stamp = true;\n    this.authoringComponentContent.tools.strokeColor = true;\n    this.authoringComponentContent.tools.fillColor = true;\n    this.authoringComponentContent.tools.clone = true;\n    this.authoringComponentContent.tools.strokeWidth = true;\n    this.authoringComponentContent.tools.sendBack = true;\n    this.authoringComponentContent.tools.sendForward = true;\n    this.authoringComponentContent.tools.undo = true;\n    this.authoringComponentContent.tools.redo = true;\n    this.authoringComponentContent.tools.delete = true;\n    this.authoringViewComponentChanged();\n  }\n\n  authoringDisableAllToolsButtonClicked() {\n    if (this.authoringComponentContent.tools == null) {\n      this.authoringComponentContent.tools = {};\n    }\n    this.authoringComponentContent.tools.select = false;\n    this.authoringComponentContent.tools.line = false;\n    this.authoringComponentContent.tools.shape = false;\n    this.authoringComponentContent.tools.freeHand = false;\n    this.authoringComponentContent.tools.text = false;\n    this.authoringComponentContent.tools.stamp = false;\n    this.authoringComponentContent.tools.strokeColor = false;\n    this.authoringComponentContent.tools.fillColor = false;\n    this.authoringComponentContent.tools.clone = false;\n    this.authoringComponentContent.tools.strokeWidth = false;\n    this.authoringComponentContent.tools.sendBack = false;\n    this.authoringComponentContent.tools.sendForward = false;\n    this.authoringComponentContent.tools.undo = false;\n    this.authoringComponentContent.tools.redo = false;\n    this.authoringComponentContent.tools.delete = false;\n    this.authoringViewComponentChanged();\n  }\n\n  authoringSaveStarterDrawData() {\n    if (confirm(this.$translate('draw.areYouSureYouWantToSaveTheStarterDrawing'))) {\n      const drawData = this.getDrawData();\n      this.authoringComponentContent.starterDrawData = drawData;\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  authoringDeleteStarterDrawData() {\n    if (confirm(this.$translate('draw.areYouSureYouWantToDeleteTheStarterDrawing'))) {\n      this.authoringComponentContent.starterDrawData = null;\n      this.drawingTool.clear();\n      this.authoringViewComponentChanged();\n    }\n  }\n\n  authoringViewWidthChanged() {\n    this.width = this.authoringComponentContent.width;\n    this.updateStarterDrawDataWidth();\n    this.authoringViewComponentChanged();\n    this.authoringInitializeDrawingToolAfterTimeout();\n  }\n\n  updateStarterDrawDataWidth() {\n    if (this.authoringComponentContent.starterDrawData != null) {\n      const starterDrawDataJSONObject = angular.fromJson(this.authoringComponentContent.starterDrawData);\n      if (starterDrawDataJSONObject != null && starterDrawDataJSONObject.dt != null) {\n        starterDrawDataJSONObject.dt.width = this.width;\n        this.authoringComponentContent.starterDrawData = angular.toJson(starterDrawDataJSONObject);\n      }\n    }\n  }\n\n  authoringViewHeightChanged() {\n    this.height = this.authoringComponentContent.height;\n    this.updateStarterDrawDataHeight();\n    this.authoringViewComponentChanged();\n    this.authoringInitializeDrawingToolAfterTimeout();\n  }\n\n  updateStarterDrawDataHeight() {\n    if (this.authoringComponentContent.starterDrawData != null) {\n      const starterDrawDataJSONObject = angular.fromJson(this.authoringComponentContent.starterDrawData);\n      if (starterDrawDataJSONObject != null && starterDrawDataJSONObject.dt != null) {\n        starterDrawDataJSONObject.dt.height = this.height;\n        this.authoringComponentContent.starterDrawData = angular.toJson(starterDrawDataJSONObject);\n      }\n    }\n  }\n\n  authoringViewToolClicked() {\n    this.authoringViewComponentChanged();\n    this.authoringInitializeDrawingToolAfterTimeout();\n  }\n\n  /**\n   * Show the asset popup to allow the author to choose the background image\n   */\n  chooseBackgroundImage() {\n    const params = {\n      isPopup: true,\n      nodeId: this.nodeId,\n      componentId: this.componentId,\n      target: 'background'\n    };\n    this.$rootScope.$broadcast('openAssetChooser', params);\n  }\n\n  authoringViewBackgroundChanged() {\n    this.updateStarterDrawDataBackground();\n    this.authoringViewComponentChanged();\n  }\n\n  updateStarterDrawDataBackground() {\n    const starterDrawData = this.authoringComponentContent.starterDrawData;\n    if (starterDrawData != null) {\n      const starterDrawDataJSON = angular.fromJson(starterDrawData);\n      if (starterDrawDataJSON != null &&\n        starterDrawDataJSON.canvas != null &&\n        starterDrawDataJSON.canvas.backgroundImage != null &&\n        starterDrawDataJSON.canvas.backgroundImage.src != null) {\n        /*\n         * get the project assets directory path\n         * e.g. https://www.berkeley.edu/curriculum/25/assets\n         */\n        const projectAssetsDirectoryPath = this.ConfigService.getProjectAssetsDirectoryPath(true);\n        const background = this.authoringComponentContent.background;\n        /*\n         * generate the absolute path to the background image\n         * e.g. https://www.berkeley.edu/curriculum/25/assets/earth.png\n         */\n        const newSrc = projectAssetsDirectoryPath + '/' + background;\n        starterDrawDataJSON.canvas.backgroundImage.src = newSrc;\n        this.authoringComponentContent.starterDrawData = angular.toJson(starterDrawDataJSON);\n      }\n    }\n  }\n\n  /**\n   * Open the asset chooser to select an image for the stamp\n   * @param index the index of the stamp\n   */\n  chooseStampImage(index) {\n    const params = {\n      isPopup: true,\n      nodeId: this.nodeId,\n      componentId: this.componentId,\n      target: 'stamp',\n      targetObject: index\n    };\n    this.$rootScope.$broadcast('openAssetChooser', params);\n  }\n\n  /**\n   * Set the stamp image\n   * @param index the index of the stamp\n   * @param fileName the file name of the image\n   */\n  setStampImage(index, fileName) {\n    this.authoringComponentContent.stamps.Stamps[index] = fileName;\n  }\n\n  handleConnectedComponentsPostProcess() {\n    if (this.componentContent != null &&\n      this.componentContent.background != null) {\n      this.drawingTool.setBackgroundImage(this.componentContent.background);\n    }\n  }\n\n  /**\n   * Automatically set the component id for the connected component if there\n   * is only one viable option.\n   * @param connectedComponent the connected component object we are authoring\n   */\n  authoringAutomaticallySetConnectedComponentComponentIdIfPossible(connectedComponent) {\n    let components = this.getComponentsByNodeId(connectedComponent.nodeId);\n    if (components != null) {\n      let numberOfAllowedComponents = 0;\n      let allowedComponent = null;\n      for (let component of components) {\n        if (component != null) {\n          if (this.isConnectedComponentTypeAllowed(component.type) &&\n              component.id != this.componentId) {\n            // we have found a viable component we can connect to\n            numberOfAllowedComponents += 1;\n            allowedComponent = component;\n          }\n        }\n      }\n      if (numberOfAllowedComponents == 1) {\n        /*\n         * there is only one viable component to connect to so we\n         * will use it\n         */\n        connectedComponent.componentId = allowedComponent.id;\n        connectedComponent.type = 'importWork';\n        this.authoringSetImportWorkAsBackgroundIfApplicable(connectedComponent);\n      }\n    }\n  }\n\n  /**\n   * The connected component component id has changed\n   * @param connectedComponent the connected component that has changed\n   */\n  authoringConnectedComponentComponentIdChanged(connectedComponent) {\n    // default the type to import work\n    connectedComponent.type = 'importWork';\n    this.authoringSetImportWorkAsBackgroundIfApplicable(connectedComponent);\n    this.authoringViewComponentChanged();\n  }\n\n  /**\n   * If the component type is a certain type, we will set the importWorkAsBackground\n   * field to true.\n   * @param connectedComponent The connected component object.\n   */\n  authoringSetImportWorkAsBackgroundIfApplicable(connectedComponent) {\n    const componentType = this.authoringGetConnectedComponentType(connectedComponent);\n    if (componentType === 'ConceptMap' ||\n      componentType === 'Embedded' ||\n      componentType === 'Graph' ||\n      componentType === 'Label' ||\n      componentType === 'Table') {\n      connectedComponent.importWorkAsBackground = true;\n    } else {\n      delete connectedComponent.importWorkAsBackground;\n    }\n  }\n\n  /**\n   * The \"Import Work As Background\" checkbox was clicked.\n   * @param connectedComponent The connected component associated with the checkbox.\n   */\n  authoringImportWorkAsBackgroundClicked(connectedComponent) {\n    if (!connectedComponent.importWorkAsBackground) {\n      delete connectedComponent.importWorkAsBackground;\n    }\n    this.authoringViewComponentChanged();\n  }\n\n  authoringInitializeDrawingToolAfterTimeout() {\n    this.$timeout(angular.bind(this, this.initializeDrawingTool));\n  }\n}\n\nDrawAuthoringController.$inject = [\n  '$filter',\n  '$injector',\n  '$mdDialog',\n  '$q',\n  '$rootScope',\n  '$scope',\n  '$timeout',\n  'AnnotationService',\n  'ConfigService',\n  'DrawService',\n  'NodeService',\n  'NotebookService',\n  'ProjectService',\n  'StudentAssetService',\n  'StudentDataService',\n  'UtilService'];\n\nexport default DrawAuthoringController;\n"],"file":"drawAuthoringController.js"}